from pathlib import Path
from pygls import*
#from WDL import load
from qchecker.match import aggregate_match_types
from qchecker.substructures import *

def doc_to_string(ls,params):
    #text_doc = ls.workspace.get_document(params.text_document.uri)
    #uri1 = params.text_document.uri
    #doc = ls.workspace.get_document(uri1)
    #doc1 = params.TextDocumentPositionParams
    text_doc = ls.workspace.get_document(params.text_document.uri)
    string = open(text_doc.path, 'r').read()
    #return  doc1
    #return load(uri1.uri, source_text=doc.text)

    #return text_object.text
    return string


def code_checks(code):
    matches = []
    for substructure in SUBSTRUCTURES:
        matches += substructure.iter_matches(code)
    return matches

def get_error_cordinates(matches):
    x = []
    for match in matches:
        #print(type(match))
        temp = match.text_range
        x.append([temp.from_line,temp.from_offset,temp.to_line,temp.to_offset])

    return x

